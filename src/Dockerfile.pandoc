FROM alpine:3.11.6 AS ALPINE_BASE
FROM node:alpine AS NODE_BASE
FROM gradle:6.1 AS GRADLE_BASE
FROM rust:1.43-alpine3.11 AS RUST_BASE


FROM GRADLE_BASE AS build-ditaa

WORKDIR /
RUN curl -OL https://github.com/pepijnve/ditaa/archive/mini-0.12.tar.gz
RUN tar zxvf mini-*.tar.gz
RUN mv ditaa-mini* ditaa-mini
WORKDIR ditaa-mini
RUN gradle jar --offline
RUN cp build/libs/ditaa*.jar /ditaa.jar



FROM NODE_BASE AS build-vega

RUN apk add g++ make pkgconf pixman-dev cairo-dev pango-dev libjpeg-turbo-dev giflib-dev
RUN npm -g config set user root
RUN npm install -g vega vega-cli vega-lite \
    && npm cache clean --force
RUN tar zcvf vega.tgz /usr/local/bin/vl2* /usr/local/bin/vg2* /usr/local/lib/node_modules/vega*



FROM NODE_BASE AS build-mermaid
ARG MERMAID_VERSION
WORKDIR /tmp
RUN yarn add mermaid@${MERMAID_VERSION}
RUN cp /tmp/node_modules/mermaid/dist/mermaid.min* /
RUN ls -al /



FROM RUST_BASE AS build-svgbob
ARG SVGBOB_VERSION
WORKDIR /tmp
RUN rustup toolchain install nightly
RUN rustup override set nightly
RUN apk add curl musl-dev
RUN curl -L -o svgbob.tgz https://github.com/ivanceras/svgbob/archive/${SVGBOB_VERSION}.tar.gz
RUN tar zxf svgbob.tgz
RUN mv svgbob-* svgbob
# RUN git clone https://github.com/ivanceras/svgbob.git
WORKDIR svgbob
RUN cargo build
RUN cargo test
RUN cp target/debug/svgbob /



FROM ALPINE_BASE AS build-githubstyle

WORKDIR /tmp
RUN apk add git
RUN git clone https://github.com/tajmone/pandoc-goodies.git
RUN cp pandoc-goodies/templates/html5/github/GitHub.html5 /



FROM ALPINE_BASE AS build-pandoc
ARG PANDOC_VERSION
WORKDIR /tmp
RUN apk add curl
RUN curl -L "https://github.com/jgm/pandoc/releases/download/${PANDOC_VERSION}/pandoc-${PANDOC_VERSION}-linux-amd64.tar.gz" | tar --strip-components=1 -zxvf - "pandoc-${PANDOC_VERSION}/bin/pandoc"
RUN mv bin/pandoc /



FROM ALPINE_BASE AS build-jquery
ARG JQUERY_VERSION
WORKDIR /tmp
RUN apk add curl
RUN curl -L -o /jquery.js https://code.jquery.com/jquery-${JQUERY_VERSION}.js



FROM ALPINE_BASE AS build-jqueryemojis
WORKDIR /tmp
RUN apk add curl
RUN curl -L -o emojis.zip https://github.com/rodrigopolo/jqueryemoji/archive/master.zip
RUN unzip emojis.zip
RUN mkdir /emojis
RUN mv jqueryemoji-master/img/apple72/* /emojis



FROM ALPINE_BASE AS build-revealjs
ARG REVEALJS_VERSION
WORKDIR /tmp
RUN apk add curl
RUN mkdir /reveal.js
RUN curl -L "https://github.com/hakimel/reveal.js/archive/${REVEALJS_VERSION}.tar.gz" | tar -C /reveal.js --strip-components=1 --exclude test --exclude font -zxvf -
WORKDIR /reveal.js
RUN rm -rf *.md demo.html examples/ gulpfile.js package*.json test/



FROM ALPINE_BASE AS build-impressjs
ARG IMPRESSJS_VERSION
WORKDIR /tmp
RUN apk add curl
RUN mkdir /impress.js
RUN curl -L "https://github.com/impress/impress.js/archive/${IMPRESSJS_VERSION}.tar.gz" | tar -C /impress.js --strip-components=1 --exclude examples --exclude test -zxvf -
WORKDIR /impress.js
RUN rm -rf *.md *.png build.js examples/ karma.conf.js package*.json qunit* test/



FROM ALPINE_BASE AS build-plantuml
WORKDIR /tmp
RUN apk add curl
# RUN curl -L -o /plantuml.jar "https://sourceforge.net/projects/plantuml/files/plantuml.jar/download?use_mirror=10gbps-io"
RUN curl -L -o /plantuml.jar "https://sourceforge.net/projects/plantuml/files/plantuml.jar/download"



FROM ALPINE_BASE AS build-asciinemaplayer
ARG ASCIINEMAPLAYER_VERSION
WORKDIR /tmp
RUN apk add curl
RUN curl -L -o /asciinema-player.js "https://github.com/asciinema/asciinema-player/releases/download/${ASCIINEMAPLAYER_VERSION}/asciinema-player.js"
RUN touch /asciinema-player.js.map
RUN curl -L -o /asciinema-player.css "https://github.com/asciinema/asciinema-player/releases/download/${ASCIINEMAPLAYER_VERSION}/asciinema-player.css"



FROM NODE_BASE AS production

LABEL maintainer="arne@hilmann.de"

ARG version
ARG motto

RUN apk add \
    make bash curl \
    graphviz inotify-tools rsync \
    libqrencode jq sassc zip openjdk8-jre \
    python3 fontconfig lua5.3 \
    pixman cairo pango libjpeg-turbo giflib \
    && rm -rf /var/cache/apk/*

RUN npm -g config set user root
RUN npm install -g mathjax-pandoc-filter \
    && npm cache clean --force

COPY --from=build-vega /vega.tgz /
WORKDIR /
RUN tar zxf vega.tgz

RUN mkdir -p /usr/local/share/lua/5.3
RUN curl -o /usr/local/share/lua/5.3/inspect.lua -L https://raw.githubusercontent.com/kikito/inspect.lua/master/inspect.lua

RUN pip3 install MarkdownPP

RUN mkdir -p /markdeck/
COPY markdeck/ /markdeck/
COPY --from=build-pandoc /pandoc /usr/bin/
COPY --from=build-revealjs /reveal.js /markdeck/assets/framework/reveal.js/
COPY --from=build-impressjs /impress.js /markdeck/assets/framework/impress.js/
COPY --from=build-jquery /jquery.js /markdeck/assets/3rdparty/
COPY --from=build-jqueryemojis /emojis /markdeck/lib/
COPY --from=build-ditaa /ditaa.jar /markdeck/lib/
COPY --from=build-mermaid /mermaid.min.js /mermaid.min.js.map /markdeck/assets/3rdparty/
COPY --from=build-asciinemaplayer /asciinema-player.* markdeck/assets/3rdparty/
# markdeck/assets/3rdparty/asciinema-player.js:
# markdeck/assets/3rdparty/asciinema-player.js.map:
COPY --from=build-plantuml /plantuml.jar /markdeck/lib/
RUN ls -al /markdeck/assets/3rdparty
COPY --from=build-svgbob /svgbob /usr/local/bin/
COPY --from=build-githubstyle /GitHub.html5 /markdeck/template-github.html

WORKDIR /markdeck/assets/framework/reveal.js
RUN sassc css/theme/source/simple.scss > css/theme/simple.css
RUN sassc css/reveal.scss > css/reveal.css

WORKDIR /markdeck
RUN ln -sf /target/assets/css/fonts /.fonts
RUN ln -sf /markdeck/assets/markdeck/css/fonts/ /usr/share/fonts

ENV VERSION $version
ENV MOTTO $motto
VOLUME ["/source", "/target"]

RUN chown :1999 /target
RUN chmod 755 /target
RUN chmod g+s /target
RUN addgroup -g 1999 markdeck
RUN adduser -D -H -G markdeck markdeck
USER markdeck

ENTRYPOINT ["/markdeck/loop"]


FROM production AS development


USER root


FROM production
