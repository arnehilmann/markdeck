#!/bin/bash
set -e -E -u

PORT=8080
PORT_HELPER=8081
ONCE=false

PARAM=${1:-loop}
case $PARAM in
    shell)  bash -i; exit;;
    --once) ONCE=true;;
    loop)   ;;
    *)      echo "unknown parameter '$PARAM' given, aborting here..." && exit 1;;
esac

shopt -s nullglob
esc=$(printf '\033')

function print_usage() {
    echo -e "\n\n\n${esc}[1mmarkdeck $VERSION - $MOTTO${esc}[0m\n"
    echo -e "       ${esc}[1mfor the slides:  open http://localhost:$PORT${esc}[0m"
    echo
    echo -e "for side-by-side view:  open http://localhost:$PORT/explain.html"
    echo -e "     to stop markdeck:  hit Ctrl-C"
    echo
    echo
}

function show_errors() {
    rm -f /target/index.html
    echo '<html><head></head><body><pre>' > /target/index.html
    cat /tmp/pandoc.output >> /target/index.html
    echo '</pre></body></html>' >> /target/index.html
    echo -e "${esc}[37m${esc}[43m"
    echo -e "\npandoc crashed\n"
    cat /tmp/pandoc.output
    echo -e "${esc}[0m"
    sleep 4
}

function calc_css_path() {
    local p=${1/source/target}
    p=${p/.scss/.css}
    echo $p
}

if ! $ONCE; then
    print_usage
    touch /target/index.html
fi

[[ -e /source/render-asciiart-filter.config ]] && \
    ASCIIART_CONFIG=/source/render-asciiart-filter.config || \
    ASCIIART_CONFIG=/markdeck/lib/render-asciiart-filter.config
export ASCIIART_CONFIG
export ASCIIART_LIBDIR=/markdeck/lib

while true; do
    cd /target

    echo "-------- rerendering ---------"
    mkdir -p /target/assets/css/
    cp -v /markdeck/assets/markdeck/css/when-rerendering.css /target/assets/css/rerendering.css

    [[ -d /target/rendered ]] || mkdir -p /target/rendered

    echo "-------- config --------"
    shopt -s nullglob
    SOURCE_MD=$(echo /source/slide*.md)
    shopt -u nullglob
    METADATA="$(pandoc --template=/markdeck/metadata.template /markdeck/defaults.yaml ${SOURCE_MD:-/markdeck/note.md})"
    mkdir -p /target/.meta/
    rm -f /target/.meta/config.json
    echo "$METADATA" > /target/.meta/config.json
    jq -S . <<< "$METADATA"
    variant=$(jq -r '.variant' <<< "$METADATA")
    md_themes=$(jq -r '.md_themes' <<< "$METADATA")
    echo "ASCIIART_CONFIG=$ASCIIART_CONFIG"
    echo "-------- /config --------"
    echo

    echo "-------- rsync output --------"
    mkdir -p /target/assets
    rsync -a /markdeck/assets/markdeck /target/assets
    rsync -a /markdeck/assets/3rdparty /target/assets
    rsync -ram --delete --include=$variant.js --exclude '*.js/' /markdeck/assets/framework /target/assets
    touch /target/assets/css/slides.css /target/assets/css/render-pdf.css
    [[ -d /source/assets ]] && rsync -av /source/assets /target/ || :
    [[ -d /source/themes ]] && rsync -av /source/themes /target/ || :
    rsync -a /markdeck/explain.html /target/ || :
    fc-list
    echo "-------- /rsync output --------"
    echo

    echo "-------- sass output --------"
    if [[ -e /source/assets/css/slides.scss ]]; then
        sassc \
            /source/assets/css/slides.scss \
            /target/assets/css/slides.css || :
    fi
    for md_theme in $md_themes; do
        echo "theme '$md_theme' found"
        SCSS=/source/themes/$md_theme/css/slides.scss
        [[ -e $SCSS ]] && sassc $SCSS $(calc_css_path $SCSS)

        CSS=/source/themes/$md_theme/css/slides.css
        [[ -e $CSS ]] && cp $CSS $(calc_css_path $CSS)
    done
    SCSS=/source/assets/css/slides.$variant.scss
    [[ -e $SCSS ]] && sassc $SCSS $(calc_css_path $SCSS)
    sassc \
        /markdeck/assets/markdeck/css/markdeck.${variant}js.scss \
        /target/assets/markdeck/css/markdeck.${variant}js.css || :
    echo "-------- /sass output --------"
    echo

    echo "-------- pandoc output --------"
    PANDOC_ARGS=
    [[ -e /source/include-before-body ]] && PANDOC_ARGS="$PANDOC_ARGS --include-before-body /source/include-before-body"
    [[ -e /source/include-after-body ]] && PANDOC_ARGS="$PANDOC_ARGS --include-after-body /source/include-after-body"
    for md_theme in $md_themes; do
        [[ -e /source/themes/$md_theme/include-in-header.html ]] && PANDOC_ARGS="$PANDOC_ARGS --include-in-header /source/themes/$md_theme/include-in-header.html"
    done
    rm -f /target/slides.combined.md.txt
    # cat ${SOURCE_MD:-/markdeck/note.md} > /target/slides.combined.md.txt
    if [[ -n ${SOURCE_MD:-} ]]; then
        for F in $SOURCE_MD; do
            markdown-pp --exclude latexrender $F >> /target/slides.combined.md.txt
            echo >> /target/slides.combined.md.txt
        done
    else
        cp /markdeck/note.md /target/slides.combined.md.txt
    fi


    template=/markdeck/template-${variant}.html
    if pandoc \
        -f markdown+yaml_metadata_block \
        -t revealjs \
        --no-highlight \
        --wrap=preserve \
        --standalone \
        --template=$template \
        --slide-level=2 \
        --section-divs \
        --lua-filter /markdeck/lib/skip-slide-filter.lua \
        --filter mathjax-pandoc-filter \
        --lua-filter /markdeck/lib/render-asciiart-filter.lua \
        --lua-filter /markdeck/lib/render-emojis-filter.lua \
        --lua-filter /markdeck/lib/bg-shortcut-filter.lua \
        --lua-filter /markdeck/lib/${variant}-shortcut-filter.lua \
        --lua-filter /markdeck/lib/inline-svg.lua \
        --lua-filter /markdeck/lib/font-awesome.lua \
        $PANDOC_ARGS \
        -o /target/index.html.tmp \
        /markdeck/defaults.yaml /target/slides.combined.md.txt 2>&1 | tee /tmp/pandoc.output;
    then
        if [[ -e /target/index.html.tmp ]]; then
            echo "" > /target/assets/css/rerendering.css
            mv /target/index.html.tmp /target/index.html
        else
            show_errors
        fi
    else
        show_errors
    fi
    echo "-------- /pandoc output --------"
    echo
    echo "-------- /rerendering ----------"
    echo

    $ONCE && break

    if [[ /source -nt /target/index.html ]]; then
        echo -e "\n\n\nchange detected: sources newer than rendered deck, rerendering started...\n\n\n"
        continue
    fi

    sleep .5
    print_usage

    /markdeck/wait-for-changes

    echo -e "\n\n\n\n\n\n\n\n\n\n"
done

echo "done."
