#!/bin/bash
set -e -E -u

VERBOSE=false

while IFS= read -r line || [[ -n "$line" ]]; do
    if echo "$line" | grep -q "<script src="; then
        src=$(echo "$line" | sed "s/^.*<script.*src=['\"]//;s/['\"].*$//")
        $VERBOSE && du -h "$src" >&2
        echo
        echo "<!-- EXTERNAL JAVASCRIPT: $src -->"
        echo "<script>"
        cat $src | sed "s_</script_&lt;/script_g"
        echo "</script>"
    elif echo "$line" | grep -q "<link .*stylesheet"; then
        src=$(echo "$line" | sed "s/^.*<link.* href=['\"]//;s/['\"].*$//")
        $VERBOSE && du -h "$src" >&2
        echo
        echo "<!-- EXTERNAL STYLESHEET: $src -->"
        echo "<style>"
        while read -r cssline; do
            if echo "$cssline" | grep -q "src: .*url(\"fonts.* format"; then
                fontsrcrel=$(echo "$cssline" | sed "s/.*url(['\"]//;s/['\"].*//")
                fontsrcabs=$(dirname $src)/$fontsrcrel
                $VERBOSE && du -h "$fontsrcabs" >&2
                fontencoded=$(base64 "$fontsrcabs" | tr -d '\n')
                # TODO support more formats, like truetype, ...
                echo "src: url(\"data:font/truetype;charset=utf-8;base64,$fontencoded\") format(\"truetype\");}"
           else
                echo "$cssline"
            fi
        done < $src
        echo "</style>"
    elif echo "$line" | grep -q "^ *src: url("; then
        fontsrcrel=$(echo "$line" | sed "s/.*url(['\"]//;s/['\"].*//")
        fontsrcabs=$(dirname $src)/$fontsrcrel
        $VERBOSE && du -h "$fontsrcabs" >&2
        fontencoded=$(base64 "$fontsrcabs" | tr -d '\n')
        echo "src: url(\"data:font/truetype;charset=utf-8;base64,$fontencoded\") format(\"truetype\");}"
    elif echo "$line" | grep -q "<img .*src="; then
        src=$(echo "$line" | sed "s/^.*<img .*src=['\"]//;s/['\"].*$//")
        $VERBOSE && du -h "$src" >&2
        format=${src##*.}
        echo
        echo "<!-- EXTERNAL IMAGE: $src -->"
        # TODO support formats, which dont need base64 encoding, e.g. svg?!
        if [[ $format = "svg" ]]; then
            cat $src
        else
            echo "$line" | sed "s/ src=\".*//"
            echo "    src=\"data:image/$format;base64,$(base64 $src | tr -d '\n')\""
            echo "$line" | sed "s/.* src=\"[^\"]*\"//"
        fi
    elif echo "$line" | grep -q "<section .*data-background-image="; then
        src=$(echo "$line" | sed "s/^.*<section .*data-background-image=['\"]//;s/['\"].*$//")
        $VERBOSE && du -h "$src" >&2
        format=${src##*.}
        echo
        echo "<!-- EXTERNAL BACKGROUND IMAGE: $src -->"
        echo "$line" | sed "s/data-background-image=.*//"
        if [[ $format = "svg" ]]; then
            echo "    data-background-image=\"data:image/svg+xml;base64,$(base64 $src | tr -d '\n')\""
            # echo "    data-background-image='data:image/svg+xml;$(cat $src)'>"
        else
            echo "    data-background-image=\"data:image/$format;base64,$(base64 $src | tr -d '\n')\""
        fi
        echo "$line" | sed "s/.* data-background-image=[^ ]*//"
    elif echo "$line" | grep -q "<asciinema-player src="; then
        src=$(echo "$line" | sed "s/^.*<asciinema-player src=['\"]//;s/['\"].*$//")
        $VERBOSE && du -h "$src" >&2
        echo
        echo "<!-- EXTERNAL ASCIINEMA SCRIPT: $src -->"
        echo "<asciinema-player src=\"data:text/json;base64,$(base64 $src | tr -d '\n')\""
    else
        echo "$line"
    fi
done
