FROM alpine:3.13.4 AS alpine_base
FROM node:15.14.0-alpine3.13 AS node_base
FROM gradle:6.8.3-jdk8-openj9 AS gradle_base
# FROM rust:1.51.0-slim-buster AS rust_base
FROM rust:1.51.0-alpine3.13 AS rust_base



FROM gradle_base AS build-ditaa

WORKDIR /
RUN curl -OL https://github.com/pepijnve/ditaa/archive/mini-0.12.tar.gz
RUN tar zxvf mini-*.tar.gz
RUN mv ditaa-mini* ditaa-mini
WORKDIR ditaa-mini
RUN gradle jar --offline
RUN cp build/libs/ditaa*.jar /ditaa.jar



FROM node_base AS build-vega

RUN apk add g++ make pkgconf pixman-dev cairo-dev pango-dev libjpeg-turbo-dev giflib-dev
RUN npm -g config set user root
RUN npm install -g vega vega-cli vega-lite \
    && npm cache clean --force
RUN tar zcvf /vega.tgz /usr/local/bin/vl2* /usr/local/bin/vg2* /usr/local/lib/node_modules/vega*
RUN mkdir /vega
WORKDIR /vega
RUN tar zxvf /vega.tgz



FROM node_base AS build-mermaid
ARG MERMAID_VERSION
WORKDIR /tmp
RUN yarn add mermaid@${MERMAID_VERSION}
RUN cp /tmp/node_modules/mermaid/dist/mermaid.min* /
RUN ls -al /



FROM rust_base AS build-svgbob
ARG SVGBOB_VERSION
WORKDIR /tmp
RUN apk add curl musl-dev
RUN curl -L -o svgbob.tgz https://github.com/ivanceras/svgbob/archive/${SVGBOB_VERSION}.tar.gz
RUN tar zxf svgbob.tgz
RUN mv svgbob-* svgbob
WORKDIR svgbob
RUN cargo build --release
RUN cargo test --release
RUN cp target/release/svgbob /svgbob.orig
RUN echo "svgbob.orig \$@ | sed -n '/^<svg/,\$p'" > /svgbob
RUN chmod a+rx /svgbob



FROM alpine_base AS build-githubstyle

WORKDIR /tmp
RUN apk add git
RUN git clone https://github.com/tajmone/pandoc-goodies.git
RUN cp pandoc-goodies/templates/html5/github/GitHub.html5 /



FROM alpine_base AS build-pandoc
ARG PANDOC_VERSION
WORKDIR /tmp
RUN apk add curl
RUN curl -L "https://github.com/jgm/pandoc/releases/download/${PANDOC_VERSION}/pandoc-${PANDOC_VERSION}-linux-amd64.tar.gz" | tar --strip-components=1 -zxvf - "pandoc-${PANDOC_VERSION}/bin/pandoc"
RUN mv bin/pandoc /



FROM alpine_base AS build-jquery
ARG JQUERY_VERSION
WORKDIR /tmp
RUN apk add curl
RUN curl -L -o /jquery.js https://code.jquery.com/jquery-${JQUERY_VERSION}.js



FROM alpine_base AS build-jqueryemojis
WORKDIR /tmp
RUN apk add curl
RUN curl -L -o emojis.zip https://github.com/rodrigopolo/jqueryemoji/archive/master.zip
RUN unzip emojis.zip
RUN mkdir /emojis
RUN mv jqueryemoji-master/img/apple72/* /emojis



FROM alpine_base AS build-revealjs
ARG REVEALJS_VERSION
WORKDIR /tmp
RUN apk add curl
RUN mkdir /reveal.js
RUN curl -L "https://github.com/hakimel/reveal.js/archive/${REVEALJS_VERSION}.tar.gz" | tar -C /reveal.js --strip-components=1 --exclude test --exclude font -zxvf -
WORKDIR /reveal.js
RUN rm -rf *.md demo.html examples/ gulpfile.js package*.json test/
RUN touch dist/reveal.esm.js.map



FROM alpine_base AS build-impressjs
ARG IMPRESSJS_VERSION
WORKDIR /tmp
RUN apk add curl
RUN mkdir /impress.js
RUN curl -L "https://github.com/impress/impress.js/archive/${IMPRESSJS_VERSION}.tar.gz" | tar -C /impress.js --strip-components=1 --exclude examples --exclude test -zxvf -
WORKDIR /impress.js
RUN rm -rf *.md *.png build.js examples/ karma.conf.js package*.json qunit* test/



FROM alpine_base AS build-plantuml
WORKDIR /tmp
RUN apk add curl
# RUN curl -L -o /plantuml.jar "https://sourceforge.net/projects/plantuml/files/plantuml.jar/download?use_mirror=10gbps-io"
RUN curl -L -o /plantuml.jar "https://sourceforge.net/projects/plantuml/files/plantuml.jar/download"



FROM alpine_base AS build-asciinemaplayer
ARG ASCIINEMAPLAYER_VERSION
WORKDIR /tmp
RUN apk add curl
RUN curl -L -o /asciinema-player.js "https://github.com/asciinema/asciinema-player/releases/download/${ASCIINEMAPLAYER_VERSION}/asciinema-player.js"
RUN touch /asciinema-player.js.map
RUN curl -L -o /asciinema-player.css "https://github.com/asciinema/asciinema-player/releases/download/${ASCIINEMAPLAYER_VERSION}/asciinema-player.css"



FROM alpine_base AS build-foundationicons
WORKDIR /tmp
RUN apk add curl
RUN curl -L -O https://zurb.com/playground/uploads/upload/upload/288/foundation-icons.zip
RUN unzip foundation-icons.zip
RUN mv foundation-icons /



FROM alpine_base AS build-cssgg
RUN apk add curl
RUN curl -L -o /all-gg.css https://css.gg/css



FROM alpine_base as build-mathjaxjs
RUN apk add git
RUN git clone https://github.com/mathjax/MathJax.git mj-tmp
RUN mv mj-tmp/es5 /mathjax




FROM rust_base as build-markdeck

RUN apk add musl-dev

RUN mkdir -p /markdeck/
# TODO dont use docroot/main here, but copy from src/markdeck:
# COPY markdeck/ /markdeck/
COPY --from=build-revealjs /reveal.js /markdeck/assets/framework/reveal.js/
COPY --from=build-impressjs /impress.js /markdeck/assets/framework/impress.js/
COPY --from=build-jquery /jquery.js /markdeck/assets/3rdparty/
COPY --from=build-jqueryemojis /emojis /markdeck/lib/
COPY --from=build-ditaa /ditaa.jar /markdeck/lib/
COPY --from=build-asciinemaplayer /asciinema-player.js /asciinema-player.js.map /asciinema-player.css /markdeck/assets/3rdparty/
COPY --from=build-plantuml /plantuml.jar /markdeck/lib/
COPY --from=build-githubstyle /GitHub.html5 /markdeck/template-github.html
COPY --from=build-foundationicons /foundation-icons /markdeck/assets/markdeck/css
COPY --from=build-cssgg /all-gg.css /markdeck/assets/markdeck/css
COPY --from=build-mathjaxjs /mathjax /markdeck/assets/3rdparty/mathjax/
COPY src/markdeck/template* /markdeck/.markdeck/
COPY src/markdeck/explain.html /markdeck/
COPY src/markdeck/metadata.template /markdeck/.markdeck/
COPY src/markdeck/defaults.yaml /markdeck/.markdeck/
COPY src/markdeck/lib/*.lua /markdeck/.markdeck/
COPY src/markdeck/lib/*.config /markdeck/.markdeck/
COPY src/markdeck/lib/*.jar /markdeck/.markdeck/
COPY src/markdeck/assets/markdeck /markdeck/assets/

# TODO RUN rustup target add x86_64-unknown-linux-musl
# TODO RUN cargo install --target x86_64-unknown-linux-musl --path .

WORKDIR /sources
COPY Cargo.* build.rs ./
RUN mkdir src
RUN echo 'fn main() {}' > src/main.rs
RUN cargo build --release

COPY src ./src
RUN rm -rf src/docroot/main/
RUN ln -sf /markdeck src/docroot/main
RUN cargo build --release --frozen



FROM alpine_base AS production

LABEL maintainer="arne@hilmann.de"

RUN apk add \
    bash curl \
    graphviz \
    libqrencode zip openjdk8-jre \
    fontconfig lua5.3 \
    pixman cairo pango libjpeg-turbo giflib \
    npm \
    && rm -rf /var/cache/apk/*

WORKDIR /

RUN mkdir -p /usr/local/share/lua/5.3
RUN curl -o /usr/local/share/lua/5.3/inspect.lua -L https://raw.githubusercontent.com/kikito/inspect.lua/master/inspect.lua

COPY --from=build-vega /vega /
COPY --from=build-pandoc /pandoc /usr/bin/
COPY --from=build-svgbob /svgbob* /usr/local/bin/
COPY --from=build-markdeck /sources/target/release/markdeck /usr/bin/

# WORKDIR /markdeck/assets/framework/reveal.js
# RUN sassc css/theme/source/simple.scss > css/theme/simple.css
# RUN sassc css/reveal.scss > css/reveal.css

WORKDIR /markdeck
RUN ln -sf /target/assets/css/fonts /.fonts
RUN ln -sf /markdeck/assets/markdeck/css/fonts/ /usr/share/fonts

WORKDIR /source

ARG version
ENV VERSION $version

ARG motto
ENV MOTTO $motto

RUN addgroup -g 1999 markdeck
RUN adduser -D -H -G markdeck markdeck
RUN mkdir -p /target
RUN chown 501:1999 /target
RUN chmod 755 /target
# RUN chmod g+s /target
USER markdeck
VOLUME ["/source", "/target"]

ENTRYPOINT ["/usr/bin/markdeck", "--port", "8080", "--source", "/source", "--target", "/target", "--watcher", "CompareReference"]


FROM production AS development


USER root


FROM production
